# {{ name }} - Bash Stage Template Usage Guide

## About This Template
This template creates a bash-based stage for executing shell commands or scripts as part of your DVC pipeline.

## Description
{{ description }}

## How to Use This Stage

### Option 1: Add bash commands directly to dvc.yaml
1. Open `dvc.yaml` in this directory
2. Edit the `cmd` section to include your bash commands
3. Update the `deps` (dependencies) and `outs` (outputs) sections as needed

### Option 2: Create a separate bash script
1. Create a bash script in the `src` directory (e.g., `src/{{ name }}.sh`)
2. Make the script executable: `chmod +x src/{{ name }}.sh`
3. Update the `cmd` section in `dvc.yaml` to reference your script:
   ```yaml
   cmd:
     - bash src/{{ name }}.sh
   ```

### Key Files
- `dvc.yaml`: DVC pipeline definition - update dependencies, outputs, and commands here
- `params.in.yaml`: Parameter definitions (currently empty, add parameters as needed)
- `input/`: Directory for input files (add your input data here)
- `output/`: Directory for output files (your script should write results here)
- `README.md`: Documentation for this specific stage

### Next Steps
1. Review and update the dependencies (`deps`) in `dvc.yaml`
2. Review and update the outputs (`outs`) in `dvc.yaml`
3. Add any parameters your script needs to `params.in.yaml`
4. Implement your bash logic in `dvc.yaml` or create a separate script
5. Test your stage with: `dvc repro {{ name }}`

## Tips
- Use `set -euo pipefail` at the beginning of your bash scripts for better error handling
- Create the output directory if it doesn't exist: `mkdir -p output`
- For complex logic, prefer separate scripts over inline commands in dvc.yaml